// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (91f43a0f).
//
// AX_jpg_Server.tli
//
// Wrapper implementations for Win32 type library AX_jpg_Server.tlb
// compiler-generated file created 06/27/03 at 18:01:22 - DO NOT EDIT!

#pragma once

//
// interface IAxJpgCard wrapper method implementations
//

inline void IAxJpgCard::PutBackColor ( OLE_COLOR pclr ) {
    HRESULT _hr = put_BackColor(pclr);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

inline OLE_COLOR IAxJpgCard::GetBackColor ( ) {
    OLE_COLOR _result;
    HRESULT _hr = get_BackColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline long IAxJpgCard::GetCardIndex ( ) {
    long _result;
    HRESULT _hr = get_CardIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline void IAxJpgCard::PutCardIndex ( long pVal ) {
    HRESULT _hr = put_CardIndex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

inline CARDSHOWSTATUS IAxJpgCard::GetCardStatus ( ) {
    CARDSHOWSTATUS _result;
    HRESULT _hr = get_CardStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline void IAxJpgCard::PutCardStatus ( CARDSHOWSTATUS * pVal ) {
    HRESULT _hr = put_CardStatus(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

inline long IAxJpgCard::GetNumCardOnDeck ( ) {
    long _result;
    HRESULT _hr = get_NumCardOnDeck(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline void IAxJpgCard::PutNumCardOnDeck ( long pVal ) {
    HRESULT _hr = put_NumCardOnDeck(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

inline _bstr_t IAxJpgCard::GetDeckName ( ) {
    BSTR _result;
    HRESULT _hr = get_DeckName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline long IAxJpgCard::GetSizeImageY ( ) {
    long _result;
    HRESULT _hr = get_SizeImageY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline void IAxJpgCard::PutSizeImageY ( long pVal ) {
    HRESULT _hr = put_SizeImageY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

inline long IAxJpgCard::GetSizeImageX ( ) {
    long _result;
    HRESULT _hr = get_SizeImageX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline void IAxJpgCard::PutSizeImageX ( long pVal ) {
    HRESULT _hr = put_SizeImageX(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface _IAxJpgCardEvents wrapper method implementations
//

inline HRESULT _IAxJpgCardEvents::LMouseClick ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

inline HRESULT _IAxJpgCardEvents::RMouseClick ( ) {
    HRESULT _result;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAxJpgCardEventsVtbl wrapper method implementations
//

inline HRESULT _IAxJpgCardEventsVtbl::LMouseClick ( ) {
    HRESULT _hr = raw_LMouseClick();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT _IAxJpgCardEventsVtbl::RMouseClick ( ) {
    HRESULT _hr = raw_RMouseClick();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}
